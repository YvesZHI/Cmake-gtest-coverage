cmake_minimum_required(VERSION 3.9)
project(Student CXX)

set(CMAKE_CXX_COMPILER g++)
set(CMAKE_CXX_STANDARD 11)

set(INCLUDES include)
set(SOURCES src/Student.cpp)
set(MAIN src/main.cpp)
set(TARGET student)

add_executable(${TARGET} ${MAIN} ${SOURCES})
target_include_directories(${TARGET} PRIVATE ${INCLUDES})

# release
# cmake -DRelease=ON ../
set(Release OFF CACHE BOOL "release or debug")
if(${Release})
    # normal release bin file
    target_compile_options(${TARGET} PRIVATE -std=c++11 -O3)
    return()
endif()


# debug
set(TESTSOURCES unittest/TestStudent.cpp)
set(TESTTARGET ${TARGET}-test)
set(TESTTARGETCOV ${TESTTARGET}-cov)
set(RESULTCOV cov.html)

find_program(GCOVR gcovr)
if(NOT GCOVR)
    message(FATAL_ERROR "gcovr not found!")
endif()
find_package(GTest REQUIRED)

# normal debug bin file
target_compile_options(${TARGET} PRIVATE -std=c++11 -g -O0)

# unit-test bin file
add_executable(${TESTTARGET} ${TESTSOURCES} ${SOURCES})
target_include_directories(${TESTTARGET} PRIVATE ${INCLUDES})
target_compile_options(${TESTTARGET} PRIVATE -std=c++11 -g -O0 -coverage)
#target_link_libraries(${TESTTARGET} -lgtest -lpthread gcov)
target_link_libraries(${TESTTARGET} GTest::GTest GTest::Main gcov)


# unit-test bin file & code coverage
add_custom_target(
    cov ALL # ALL is to make the target cov to be executed automatically while executing the command make
    DEPENDS ${TESTTARGET}
    )

# bash script to generate code coverage
add_custom_command(
    TARGET cov
    COMMAND touch ${TESTTARGETCOV}
    COMMAND echo "'#!/bin/bash'" >${TESTTARGETCOV}
    COMMAND echo >>${TESTTARGETCOV}
    COMMAND echo >>${TESTTARGETCOV}
    COMMAND echo "./${TESTTARGET}" >>${TESTTARGETCOV}
    COMMAND echo "gcovr -r ${PROJECT_SOURCE_DIR} --object-directory=${PROJECT_BINARY_DIR} --html -o ${RESULTCOV}" >>${TESTTARGETCOV}
    COMMAND chmod +x ${TESTTARGETCOV}
    )


# execute make clean-all to delete code coverage files
add_custom_target(
    clean-all
    COMMAND rm -f ${RESULTCOV} ${TESTTARGETCOV} && make clean
    )


enable_testing()
include(GoogleTest)
gtest_add_tests(TARGET student-test AUTO)
